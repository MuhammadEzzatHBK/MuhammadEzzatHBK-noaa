#'data <- readr::read_delim('signif.txt',delim ='\t')
#'data <- eq_clean_data(data,T)
#'eq_map(data)
#'}
#'@export
eq_map <-function(data,annot_col){
map <-  leaflet::leaflet(data) %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(
lng = ~LONGITUDE,
lat = ~LATITUDE,
weight = 1,
radius = ~EQ_PRIMARY*2,
popup = data[[annot_col]],
color = 'red'
)
return(map)
}
#'@title eq_location_clean
#'@description Cleans the location name by removing the country's name with the colon using regex's.
#'Can be used with the function mutate() to obtain the clean column.
#'@param location the location name column
#'@return clean_loc : The clean location name.
#'@importFrom stringr str_remove
#'@examples \dontrun{
#'data <- readr::read_delim('signif.txt',delim ='\t')
#'eq_location_clean(data[['LOCATION_NAME]])
#'}
#'@export
eq_location_clean <- function(location){
clean_loc <- stringr::str_remove(location,'^[^:]*:')
return(clean_loc)
}
#'@title eq_clean_data
#'@description Cleans the whole NOAA data by accomplishing all the requirments regrading lattitude, longitude,
#'date & location name
#'@param data A data frame, should be the NOAA data
#'@param na.rm A logical that determines whether missing values should be omitted or not
#'@return The clean data frame
#'@importFrom dplyr select mutate %>%
#'@importFrom stats na.omit
#'@importFrom tidyr unite
#'@importFrom lubridate ymd
#'@examples \dontrun{
#'data <- readr::read_delim('signif.txt',delim ='\t')
#'F <- eq_clean_data(data)
#'T <- eq_clean_data(data,T)
#'}
#'@export
eq_clean_data <- function(data,na.rm = F){
clean_data <- data %>% dplyr::select(I_D,YEAR,MONTH,DAY,EQ_PRIMARY,LATITUDE,LONGITUDE,
LOCATION_NAME,COUNTRY,STATE,TOTAL_DEATHS)
if(na.rm)
clean_data <- stats::na.omit(clean_data,LOCATION_NAME)
clean_data <- clean_data %>% dplyr::mutate(LOCATION_NAME = eq_location_clean(LOCATION_NAME))
clean_data <- clean_data %>%  dplyr::mutate(
LONGITUDE = as.numeric(LONGITUDE),
LATITUDE = as.numeric(LATITUDE),
MONTH = ifelse(is.na(MONTH), 1, MONTH),
DAY = ifelse(is.na(DAY), 1, DAY),
TOTAL_DEATHS = as.numeric(TOTAL_DEATHS),
EQ_PRIMARY = as.numeric(EQ_PRIMARY),
TIME = ifelse(YEAR > 0,'AD','BC'))
clean_data <- clean_data %>% tidyr::unite(col ='DATE',YEAR,MONTH,DAY,sep='/',remove=F)
clean_data <- clean_data %>% dplyr::mutate(DATE = lubridate::ymd(DATE))
return(clean_data)
}
noaa <- readr::read_delim('signif.txt',delim='\t')
noaa_clean <- eq_clean_data(noaa)
library(dplyr)
noaa <- readr::read_delim('signif.txt',delim='\t')
noaa_clean <- eq_clean_data(noaa)
noaa <- readr::read_delim('signif.txt',delim='\t')
noaa_clean <- eq_clean_data(noaa,T)
noaa_mutated <- mutate(noaa,label = eq_create_label(noaa))
View(noaa_mutated)
eq_map(noaa,'lable')
noaa <- readr::read_delim('signif.txt',delim='\t')
noaa_clean <- eq_clean_data(noaa,T)
noaa_mutated <- mutate(noaa,label = eq_create_label(noaa))
eq_map(noaa,'lablel')
noaa <- readr::read_delim('signif.txt',delim='\t')
noaa_clean <- eq_clean_data(noaa,T)
noaa_mutated <- mutate(noaa,label = eq_create_label(noaa),LATITUDE = as.numeric(LATITUDE),LONGITUDE = as.numeric(LONGITUDE))
eq_map(noaa,'lablel')
noaa <- readr::read_delim('signif.txt',delim='\t')
noaa_clean <- eq_clean_data(noaa,T)
noaa_mutated <- mutate(noaa,label = eq_create_label(noaa),LATITUDE = as.numeric(LATITUDE),LONGITUDE = as.numeric(LONGITUDE))
eq_map(noaa,'lablel')
noaa <- readr::read_delim('signif.txt',delim='\t')
noaa_clean <- eq_clean_data(noaa,T)
noaa_mutated <- mutate(noaa,label = eq_create_label(noaa))
eq_map(noaa_mutated,'lablel')
noaa <- readr::read_delim('signif.txt',delim='\t')
noaa_clean <- eq_clean_data(noaa,T)
noaa_mutated <- mutate(noaa_clean,label = eq_create_label(noaa))
eq_map(noaa_mutated,'lablel')
View(noaa_clean)
noaa <- readr::read_delim('signif.txt',delim='\t')
noaa_clean <- eq_clean_data(noaa,T)
noaa_mutated <- mutate(noaa_clean,label = eq_create_label(noaa))
eq_map(noaa_mutated,'lablel')
rm(noaa_mutated)
noaa <- readr::read_delim('signif.txt',delim='\t')
noaa_clean <- eq_clean_data(noaa,T)
noaa_mutated <- mutate(noaa_clean,label = eq_create_label(noaa))
eq_map(noaa_mutated,'lablel')
noaa <- readr::read_delim('signif.txt',delim='\t')
noaa_clean <- eq_clean_data(noaa,T)
noaa_mutated <- noaa_clean %>% mutate(label = eq_create_label(noaa))
eq_map(noaa_mutated,'lablel')
noaa_mutated <- noaa_clean %>% mutate(label = eq_create_label(noaa))
noaa <- readr::read_delim('signif.txt',delim='\t')
noaa_clean <- eq_clean_data(noaa,T)
noaa_mutated <- noaa_clean %>% mutate(label = eq_create_label(noaa_clean))
eq_map(noaa_mutated,'lablel')
library(ggplot2)
library(ggthemes)
ggplot(noaa_mutated,aes(x=DATE,size=EQ_PRIMARY,col=TOTAL_DEATHS))+geom_timeline()+theme_fivethirtyeight()
ggplot(noaa_mutated,aes(x=DATE,size=EQ_PRIMARY,col=TOTAL_DEATHS))+geom_timeline_label()+theme_fivethirtyeight()
noaa <- readr::read_delim('signif.txt',delim='\t')
noaa_clean <- eq_clean_data(noaa,T)
noaa_mutated <- noaa_clean %>% mutate(label = eq_create_label(noaa_clean))
eq_map(noaa_mutated,'lablel')
ggplot(noaa_mutated,aes(x=DATE,size=EQ_PRIMARY,col=TOTAL_DEATHS,
label = LOCATION_NAME,magnitude = EQ_PRIMARY))+geom_timeline_label()+theme_fivethirtyeight()
ggplot(noaa_mutated,aes(x=DATE,size=EQ_PRIMARY,col=TOTAL_DEATHS,
label = LOCATION_NAME,magnitude = EQ_PRIMARY))+geom_timeline_label()+theme_fivethirtyeight()
ggplot(noaa_mutated,aes(x=DATE,col=TOTAL_DEATHS,
magnitude = EQ_PRIMARY))+
geom_timeline_label(data = arrange(noaa_mutated,desc(EQ_PRIMARY))[1:5,],
aes(label=LOCATION_NAME))+
theme_fivethirtyeight()
noaa <- readr::read_delim('signif.txt',delim='\t')
noaa_clean <- eq_clean_data(noaa,T)
noaa_mutated <- noaa_clean %>% mutate(label = eq_create_label(noaa_clean))
eq_map(noaa_mutated,'lablel')
ggplot(noaa_mutated,aes(x=DATE,col=TOTAL_DEATHS,
magnitude = EQ_PRIMARY))+
geom_timeline()+
geom_timeline_label(data = arrange(noaa_mutated,desc(EQ_PRIMARY))[1:5,],aes(label = LOCATION_NAME))+
theme_fivethirtyeight()
ggplot(noaa_mutated,aes(x=DATE,size=EQ_PRIMARY,col=TOTAL_DEATHS,
))+
geom_timeline()+
geom_timeline_label(data = arrange(noaa_mutated,desc(EQ_PRIMARY))[1:5,],aes(label = LOCATION_NAME, magnitude = EQ_PRIMARY))+
theme_fivethirtyeight()
#' Time line of earthquakes
geom_timeline <- function(
mapping = NULL, data = NULL, stat = "identity",
position = "identity", show.legend = NA, inherit.aes = TRUE,
..., na.rm = FALSE
) {
ggplot2::layer(
geom = GeomTimeline, mapping = mapping, data = data,
stat = stat, position = position, show.legend = show.legend,
inherit.aes = inherit.aes, params = list(na.rm = na.rm, ...)
)
}
#' @rdname geom_timeline
#' @format NULL
#' @usage NULL
#'
#' @importFrom ggplot2 ggproto Geom aes draw_key_point
#' @importFrom grid pointsGrob unit gpar polylineGrob gList
#' @importFrom scales alpha
#'
#' @export
GeomTimeline <- ggplot2::ggproto("GeomTimeline", ggplot2::Geom,
required_aes = c("x"),
default_aes = ggplot2::aes(
y        = 0.25,
colour   = "grey",
size     = 1,
alpha    = 0.25,
shape    = 19,
fill     = "black",
linesize = 0.5,
linetype = 1 ,
fontsize = 10,
stroke   = 1
),
draw_key = ggplot2::draw_key_point,
setup_data = function(data, params) {
if ("colour" %in% colnames(data)) {
warning(paste(
"missing values for colour.",
"They were replaced with the minimum value."
))
data$colour[is.na(data$colour)] <-
min(data$colour, na.rm = TRUE)
}
data
},
draw_panel = function(data, panel_scales, coord) {
coords <- data %>%
coord$transform(panel_scales)
if (length(unique(coords$y)) == 1) {
coords$y <- 0.25
}
points <- grid::pointsGrob(
x    = coords$x,
y    = coords$y,
size = grid::unit(coords$size / 2.5, "char"),
pch  = coords$shape,
gp   = grid::gpar(
col      = coords$colour %>%
scales::alpha(coords$alpha),
fill     = coords$fill %>%
scales::alpha(coords$alpha),
fontsize = grid::unit(coords$fontsize, "points")
)
)
y_lines <- unique(coords$y)
lines <- grid::polylineGrob(
x  = grid::unit(
rep(c(0, 1), each = length(y_lines)),
"npc"
),
y  = grid::unit(c(y_lines, y_lines), "npc"),
id = rep(seq_along(y_lines), 2),
gp = grid::gpar(
col = "grey",
lwd = grid::unit(coords$linesize[1], "mm")
)
)
grid::gList(points, lines)
}
)
ggplot(noaa_mutated,aes(x=DATE,size=EQ_PRIMARY,col=TOTAL_DEATHS,
))+
geom_timeline()+
geom_timeline_label(data = arrange(noaa_mutated,desc(EQ_PRIMARY))[1:5,],aes(label = LOCATION_NAME, magnitude = EQ_PRIMARY))+
theme_fivethirtyeight()
ggplot(noaa_mutated,aes(x=DATE,
size=EQ_PRIMARY,
col=TOTAL_DEATHS,
))+
geom_timeline()+
geom_timeline_label(data=
arrange(noaa_mutated,
desc(EQ_PRIMARY))[1:5,],
aes(label = LOCATION_NAME,
magnitude = EQ_PRIMARY))+
theme_fivethirtyeight()
ggplot(noaa_mutated,aes(x=DATE,
size=EQ_PRIMARY,
col=TOTAL_DEATHS,
))+
geom_timeline()+
geom_timeline_label(data=
arrange(noaa_mutated,
desc(EQ_PRIMARY))[1:5,],
aes(label = LOCATION_NAME,
magnitude = EQ_PRIMARY))+
theme_excel_new()
ggplot(noaa_mutated,aes(x=DATE,
size=EQ_PRIMARY,
col=TOTAL_DEATHS,
))+
geom_timeline()+
geom_timeline_label(data=
arrange(noaa_mutated,
desc(EQ_PRIMARY))[1:5,],
aes(label = LOCATION_NAME,
magnitude = EQ_PRIMARY))+
theme_foundation()
ggplot(noaa_mutated,aes(x=DATE,
size=EQ_PRIMARY,
col=TOTAL_DEATHS,
))+
geom_timeline()+
geom_timeline_label(data=
arrange(noaa_mutated,
desc(EQ_PRIMARY))[1:5,],
aes(label = LOCATION_NAME,
magnitude = EQ_PRIMARY))+
theme_wsj()
ggplot(noaa_mutated,aes(x=DATE,
size=EQ_PRIMARY,
col=TOTAL_DEATHS,
))+
geom_timeline()+
geom_timeline_label(data=
arrange(noaa_mutated,
desc(EQ_PRIMARY))[1:5,],
aes(label = LOCATION_NAME,
magnitude = EQ_PRIMARY))+
theme_get()
ggplot(noaa_mutated,aes(x=DATE,
size=EQ_PRIMARY,
col=TOTAL_DEATHS,
))+
geom_timeline()+
geom_timeline_label(data=
arrange(noaa_mutated,
desc(EQ_PRIMARY))[1:5,],
aes(label = LOCATION_NAME,
magnitude = EQ_PRIMARY))+
theme_solarized()
ggplot(noaa_mutated,aes(x=DATE,
size=EQ_PRIMARY,
col=TOTAL_DEATHS,
))+
geom_timeline()+
geom_timeline_label(data=
arrange(noaa_mutated,
desc(EQ_PRIMARY))[1:5,],
aes(label = LOCATION_NAME,
magnitude = EQ_PRIMARY))+
theme_igray()
ggplot(noaa_mutated,aes(x=DATE,
size=EQ_PRIMARY,
col=TOTAL_DEATHS,
))+
geom_timeline()+
geom_timeline_label(data=
arrange(noaa_mutated,
desc(EQ_PRIMARY))[1:5,],
aes(label = LOCATION_NAME,
magnitude = EQ_PRIMARY))+
theme_igray()
ggplot(noaa_mutated,aes(x=DATE,
size=EQ_PRIMARY,
col=TOTAL_DEATHS,
))+
geom_timeline()+
geom_timeline_label(data=
arrange(noaa_mutated,
desc(EQ_PRIMARY))[1:5,],
aes(label = LOCATION_NAME,
magnitude = EQ_PRIMARY))+
theme_pander()
ggplot(noaa_mutated,aes(x=DATE,
size=EQ_PRIMARY,
col=TOTAL_DEATHS,
))+
geom_timeline()+
geom_timeline_label(data=
arrange(noaa_mutated,
desc(EQ_PRIMARY))[1:5,],
aes(label = LOCATION_NAME,
magnitude = EQ_PRIMARY))+
theme_update()
ggplot(noaa_mutated,aes(x=DATE,
size=EQ_PRIMARY,
col=TOTAL_DEATHS,
))+
geom_timeline()+
geom_timeline_label(data=
arrange(noaa_mutated,
desc(EQ_PRIMARY))[1:5,],
aes(label = LOCATION_NAME,
magnitude = EQ_PRIMARY))+
theme_gdocs()
ggplot(noaa_mutated,aes(x=DATE,
size=EQ_PRIMARY,
col=TOTAL_DEATHS,
))+
geom_timeline()+
geom_timeline_label(data=
arrange(noaa_mutated,
desc(EQ_PRIMARY))[1:5,],
aes(label = LOCATION_NAME,
magnitude = EQ_PRIMARY))+
theme_linedraw()
ggplot(noaa_mutated,aes(x=DATE,
size=EQ_PRIMARY,
col=TOTAL_DEATHS,
))+
geom_timeline()+
geom_timeline_label(data=
arrange(noaa_mutated,
desc(EQ_PRIMARY))[1:5,],
aes(label = LOCATION_NAME,
magnitude = EQ_PRIMARY))+
theme_stata()
ggplot(noaa_mutated,aes(x=DATE,
size=EQ_PRIMARY,
col=TOTAL_DEATHS,
))+
geom_timeline()+
geom_timeline_label(data=
arrange(noaa_mutated,
desc(EQ_PRIMARY))[1:5,],
aes(label = LOCATION_NAME,
magnitude = EQ_PRIMARY))+
theme_pander()
ggplot(noaa_mutated,aes(x=DATE,
size=EQ_PRIMARY,
col=TOTAL_DEATHS,
))+
geom_timeline()+
geom_timeline_label(data=
arrange(noaa_mutated,
desc(EQ_PRIMARY))[1:5,],
aes(label = LOCATION_NAME,
magnitude = EQ_PRIMARY))+
theme_hc()
ggplot(noaa_mutated,aes(x=DATE,
size=EQ_PRIMARY,
col=TOTAL_DEATHS,
))+
geom_timeline()+
geom_timeline_label(data=
arrange(noaa_mutated,
desc(EQ_PRIMARY))[1:5,],
aes(label = LOCATION_NAME,
magnitude = EQ_PRIMARY))+
theme_foundation()
ggplot(noaa_mutated,aes(x=DATE,
size=EQ_PRIMARY,
col=TOTAL_DEATHS,
))+
geom_timeline()+
geom_timeline_label(data=
arrange(noaa_mutated,
desc(EQ_PRIMARY))[1:5,],
aes(label = LOCATION_NAME,
magnitude = EQ_PRIMARY))+
theme_dark()
ggplot(noaa_mutated,aes(x=DATE,
size=EQ_PRIMARY,
col=TOTAL_DEATHS,
))+
geom_timeline()+
geom_timeline_label(data=
arrange(noaa_mutated,
desc(EQ_PRIMARY))[1:5,],
aes(label = LOCATION_NAME,
magnitude = EQ_PRIMARY))+
theme_linedraw()
ggplot(noaa_mutated,aes(x=DATE,
size=EQ_PRIMARY,
col=TOTAL_DEATHS,
))+
geom_timeline()+
geom_timeline_label(data=
arrange(noaa_mutated,
desc(EQ_PRIMARY))[1:5,],
aes(label = LOCATION_NAME,
magnitude = EQ_PRIMARY))+
theme_few()
ggplot(noaa_mutated,aes(x=DATE,
size=EQ_PRIMARY,
col=TOTAL_DEATHS,
))+
geom_timeline()+
geom_timeline_label(data=
arrange(noaa_mutated,
desc(EQ_PRIMARY))[1:5,],
aes(label = LOCATION_NAME,
magnitude = EQ_PRIMARY))+
theme_replace()
ggplot(noaa_mutated,aes(x=DATE,
size=EQ_PRIMARY,
col=TOTAL_DEATHS,
))+
geom_timeline()+
geom_timeline_label(data=
arrange(noaa_mutated,
desc(EQ_PRIMARY))[1:5,],
aes(label = LOCATION_NAME,
magnitude = EQ_PRIMARY))+
theme_solarized_2()
ggplot(noaa_mutated,aes(x=DATE,
size=EQ_PRIMARY,
col=TOTAL_DEATHS,
))+
geom_timeline()+
geom_timeline_label(data=
arrange(noaa_mutated,
desc(EQ_PRIMARY))[1:5,],
aes(label = LOCATION_NAME,
magnitude = EQ_PRIMARY))+
theme_tufte()
ggplot(noaa_mutated,aes(x=DATE,
size=EQ_PRIMARY,
col=TOTAL_DEATHS,
))+
geom_timeline()+
geom_timeline_label(data=
arrange(noaa_mutated,
desc(EQ_PRIMARY))[1:5,],
aes(label = LOCATION_NAME,
magnitude = EQ_PRIMARY))+
theme_test()
ggplot(noaa_mutated,aes(x=DATE,
size=EQ_PRIMARY,
col=TOTAL_DEATHS,
))+
geom_timeline()+
geom_timeline_label(data=
arrange(noaa_mutated,
desc(EQ_PRIMARY))[1:5,],
aes(label = LOCATION_NAME,
magnitude = EQ_PRIMARY))+
theme_map()
ggplot(noaa_mutated,aes(x=DATE,
size=EQ_PRIMARY,
col=TOTAL_DEATHS,
))+
geom_timeline()+
geom_timeline_label(data=
arrange(noaa_mutated,
desc(EQ_PRIMARY))[1:5,],
aes(label = LOCATION_NAME,
magnitude = EQ_PRIMARY))+
theme_par()
library(roxygen2)
devtools::document()
library(noaa)
